#!/bin/bash

echo "üöÄ DEPLOY DIRETO VIA FTP - HOSTINGER"
echo "===================================="
echo "üéØ Deploy imediato para matheusbassini.com.br"
echo ""

# Verificar se o build existe
if [ ! -d "frontend/dist" ]; then
    echo "‚ùå Erro: Build do frontend n√£o encontrado!"
    echo "Execute: cd frontend && npm run build"
    exit 1
fi

# Criar diret√≥rio de deploy
echo "üìÅ Preparando arquivos para FTP..."
rm -rf deploy-ftp-hostinger
mkdir -p deploy-ftp-hostinger/public_html

# Copiar frontend buildado
echo "üì¶ Copiando frontend..."
cp -r frontend/dist/* deploy-ftp-hostinger/public_html/

# Verificar se index.html existe
if [ ! -f "deploy-ftp-hostinger/public_html/index.html" ]; then
    echo "‚ùå Erro: index.html n√£o encontrado no build!"
    exit 1
fi

# Criar .htaccess otimizado para Hostinger
echo "üîß Criando .htaccess para Hostinger..."
cat > deploy-ftp-hostinger/public_html/.htaccess << 'EOF'
# ViralCut Pro - Hostinger Configuration
# Desenvolvido por Matheus Bassini

# For√ßa HTTPS
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Headers de Seguran√ßa
<IfModule mod_headers.c>
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
</IfModule>

# Compress√£o GZIP
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
</IfModule>

# Cache Control
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/svg+xml "access plus 1 month"
</IfModule>

# SPA Routing - React Router
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_URI} !^/api/
RewriteRule . /index.html [L]

# Bloquear arquivos sens√≠veis
<FilesMatch "\.(env|log|sql)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# P√°gina de erro personalizada
ErrorDocument 404 /index.html
EOF

# Preparar backend (opcional para Node.js)
echo "üì¶ Preparando backend..."
mkdir -p deploy-ftp-hostinger/public_html/api
cp -r backend/* deploy-ftp-hostinger/public_html/api/

# Usar configura√ß√£o espec√≠fica do dom√≠nio
if [ -f "backend/.env.matheusbassini.final" ]; then
    cp backend/.env.matheusbassini.final deploy-ftp-hostinger/public_html/api/.env
    echo "   ‚úÖ Configura√ß√£o de email Hostinger aplicada"
fi

# Limpar arquivos desnecess√°rios
rm -f deploy-ftp-hostinger/public_html/api/.env.example
rm -f deploy-ftp-hostinger/public_html/api/.env.hostinger
rm -rf deploy-ftp-hostinger/public_html/api/node_modules

# Criar arquivo de informa√ß√µes FTP
cat > deploy-ftp-hostinger/INSTRUCOES_FTP.md << 'EOF'
# üìÅ INSTRU√á√ïES FTP - HOSTINGER

## üîó Dados de Conex√£o FTP

### Configura√ß√£o FTP
- **Host**: matheusbassini.com.br ou ftp.matheusbassini.com.br
- **Usu√°rio**: Seu usu√°rio FTP da Hostinger
- **Senha**: Sua senha FTP da Hostinger
- **Porta**: 21 (FTP) ou 22 (SFTP)
- **Diret√≥rio**: /public_html/

## üìÇ Como Fazer Upload

### Op√ß√£o 1: FileZilla (Recomendado)
1. Baixar: https://filezilla-project.org/
2. Conectar com os dados FTP acima
3. Navegar at√© /public_html/
4. Fazer upload de TODOS os arquivos desta pasta

### Op√ß√£o 2: Painel Hostinger
1. Login: https://hpanel.hostinger.com/
2. Gerenciador de Arquivos
3. Navegar at√© public_html/
4. Upload de todos os arquivos

### Op√ß√£o 3: WinSCP (Windows)
1. Baixar: https://winscp.net/
2. Conectar via SFTP
3. Upload dos arquivos

## ‚úÖ Arquivos a Fazer Upload
- index.html (OBRIGAT√ìRIO)
- assets/ (pasta com CSS/JS)
- .htaccess (configura√ß√£o Apache)
- api/ (backend Node.js - opcional)

## üß™ Testar Ap√≥s Upload
1. https://matheusbassini.com.br
2. Deve carregar o ViralCut Pro
3. Se n√£o funcionar, verificar permiss√µes

## üîß Permiss√µes
- Arquivos: 644
- Pastas: 755
- index.html: 644
- .htaccess: 644

## üìû Suporte
- Email: suporte@matheusbassini.com.br
- WhatsApp: +55 12 99225-7085
EOF

# Criar script de configura√ß√£o Node.js
cat > deploy-ftp-hostinger/CONFIGURAR_NODEJS.md << 'EOF'
# ‚öôÔ∏è CONFIGURAR NODE.JS NA HOSTINGER

## üöÄ Ativar Node.js

### 1. Painel Hostinger
1. Login: https://hpanel.hostinger.com/
2. Advanced ‚Üí Node.js
3. Criar Nova Aplica√ß√£o

### 2. Configura√ß√µes
- **Vers√£o Node.js**: 18.x ou superior
- **Diret√≥rio da Aplica√ß√£o**: public_html/api
- **Arquivo de Inicializa√ß√£o**: server.js
- **Vari√°veis de Ambiente**: Configurar conforme .env

### 3. Vari√°veis de Ambiente
```
NODE_ENV=production
DB_HOST=srv1883.hstgr.io
DB_PORT=3306
DB_NAME=u206326127_viralcut
DB_USER=u206326127_host
DB_PASS=@Host1603
EMAIL_HOST=smtp.hostinger.com
EMAIL_PORT=587
EMAIL_USER=suporte@matheusbassini.com.br
EMAIL_PASS=@Suporte1603
JWT_SECRET=viralcut-pro-jwt-secret-2024
```

### 4. Instalar Depend√™ncias
No terminal da aplica√ß√£o Node.js:
```bash
npm install --production
```

### 5. Iniciar Aplica√ß√£o
A aplica√ß√£o deve iniciar automaticamente.
API estar√° dispon√≠vel em: https://matheusbassini.com.br/api

## üß™ Testar API
- Health Check: https://matheusbassini.com.br/api/health
- Deve retornar: {"status": "OK"}
EOF

# Estat√≠sticas
echo ""
echo "üìä Estat√≠sticas do Deploy:"
echo "=========================="
frontend_files=$(find deploy-ftp-hostinger/public_html -maxdepth 2 -name "*.html" -o -name "*.js" -o -name "*.css" | wc -l)
total_size=$(du -sh deploy-ftp-hostinger | cut -f1)

echo "üìÅ Arquivos Frontend: $frontend_files"
echo "üíæ Tamanho Total: $total_size"
echo "üåê Dom√≠nio: matheusbassini.com.br"

# Verifica√ß√µes finais
echo ""
echo "üîç Verifica√ß√µes finais..."
echo "========================"

if [ -f "deploy-ftp-hostinger/public_html/index.html" ]; then
    echo "‚úÖ index.html: OK"
else
    echo "‚ùå index.html: ERRO"
    exit 1
fi

if [ -f "deploy-ftp-hostinger/public_html/.htaccess" ]; then
    echo "‚úÖ .htaccess: OK"
else
    echo "‚ùå .htaccess: ERRO"
fi

if [ -d "deploy-ftp-hostinger/public_html/assets" ]; then
    echo "‚úÖ assets/: OK"
else
    echo "‚ö†Ô∏è  assets/: N√£o encontrado"
fi

if [ -f "deploy-ftp-hostinger/public_html/api/server.js" ]; then
    echo "‚úÖ API backend: OK"
else
    echo "‚ö†Ô∏è  API backend: N√£o encontrado"
fi

echo ""
echo "‚úÖ DEPLOY FTP PREPARADO COM SUCESSO!"
echo "===================================="
echo "üìÅ Arquivos prontos em: deploy-ftp-hostinger/"
echo "üåê Destino: matheusbassini.com.br"
echo ""
echo "üìã PR√ìXIMOS PASSOS:"
echo "1. Abrir FileZilla ou painel Hostinger"
echo "2. Conectar via FTP ao matheusbassini.com.br"
echo "3. Navegar at√© /public_html/"
echo "4. Fazer upload de TODOS os arquivos da pasta deploy-ftp-hostinger/public_html/"
echo "5. Definir permiss√µes: 644 para arquivos, 755 para pastas"
echo "6. Testar: https://matheusbassini.com.br"
echo ""
echo "üìñ DOCUMENTA√á√ÉO:"
echo "- INSTRUCOES_FTP.md - Como fazer upload via FTP"
echo "- CONFIGURAR_NODEJS.md - Como ativar Node.js (opcional)"
echo ""
echo "üéØ RESULTADO ESPERADO:"
echo "Site funcionando em: https://matheusbassini.com.br"
echo ""
echo "üìû SUPORTE:"
echo "- Email: suporte@matheusbassini.com.br"
echo "- WhatsApp: +55 12 99225-7085"
echo ""
echo "üéâ PRONTO PARA UPLOAD VIA FTP!"
