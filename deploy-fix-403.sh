#!/bin/bash

echo "üîß Deploy Corrigido para Erro 403 - matheusbassini.com.br"
echo "========================================================="
echo "üéØ Corrigindo problema de 403 Forbidden"
echo ""

# Verificar se os diret√≥rios existem
if [ ! -d "frontend" ] || [ ! -d "backend" ]; then
    echo "‚ùå Erro: Diret√≥rios frontend ou backend n√£o encontrados!"
    echo "Execute este script na raiz do projeto ViralCut Pro"
    exit 1
fi

# Limpar deploy anterior
echo "üßπ Limpando deploy anterior..."
rm -rf matheusbassini-deploy-403-fix
mkdir -p matheusbassini-deploy-403-fix/public_html/api

# Build do Frontend com verifica√ß√µes
echo "üì¶ Buildando Frontend React..."
cd frontend

if [ ! -f "package.json" ]; then
    echo "‚ùå Erro: package.json n√£o encontrado no frontend!"
    exit 1
fi

echo "   üì• Instalando depend√™ncias..."
npm ci --silent

echo "   üî® Buildando para produ√ß√£o..."
VITE_API_URL=https://matheusbassini.com.br/api npm run build

# Verificar se o build foi bem-sucedido
if [ ! -d "dist" ]; then
    echo "‚ùå Erro: Build do frontend falhou!"
    echo "Verifique os logs acima para erros"
    exit 1
fi

# Verificar se index.html foi gerado
if [ ! -f "dist/index.html" ]; then
    echo "‚ùå Erro: index.html n√£o foi gerado no build!"
    echo "Isso causa o erro 403 Forbidden"
    exit 1
fi

cd ..

echo "‚úÖ Frontend buildado com sucesso!"
echo "   üìÑ index.html: $(ls -la frontend/dist/index.html)"

# Copiar arquivos do Frontend
echo "üìÅ Copiando arquivos do Frontend..."
cp -r frontend/dist/* matheusbassini-deploy-403-fix/public_html/

# Verificar se a c√≥pia foi bem-sucedida
if [ ! -f "matheusbassini-deploy-403-fix/public_html/index.html" ]; then
    echo "‚ùå Erro: index.html n√£o foi copiado corretamente!"
    echo "Isso causar√° erro 403 Forbidden"
    exit 1
fi

echo "   ‚úÖ index.html copiado: $(ls -la matheusbassini-deploy-403-fix/public_html/index.html)"

# Criar .htaccess simplificado (sem erros)
echo "üîß Criando .htaccess simplificado..."
cat > matheusbassini-deploy-403-fix/public_html/.htaccess << 'EOF'
# ViralCut Pro - matheusbassini.com.br
# .htaccess Simplificado para evitar erro 403

RewriteEngine On

# For√ßa HTTPS
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Headers b√°sicos de seguran√ßa
<IfModule mod_headers.c>
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
</IfModule>

# Compress√£o b√°sica
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html text/css application/javascript
</IfModule>

# SPA Routing para React
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_URI} !^/api/
RewriteRule . /index.html [L]

# Bloquear arquivos sens√≠veis
<FilesMatch "\.(env|log)$">
    Order allow,deny
    Deny from all
</FilesMatch>
EOF

echo "   ‚úÖ .htaccess criado"

# Preparar Backend
echo "üì¶ Preparando Backend Node.js..."
cp -r backend/* matheusbassini-deploy-403-fix/public_html/api/

# Usar configura√ß√£o de email correta
if [ -f "backend/.env.matheusbassini.final" ]; then
    cp backend/.env.matheusbassini.final matheusbassini-deploy-403-fix/public_html/api/.env
    echo "   ‚úÖ Configura√ß√£o de email Hostinger aplicada"
else
    echo "   ‚ö†Ô∏è  Arquivo .env.matheusbassini.final n√£o encontrado"
fi

# Limpar arquivos desnecess√°rios
rm -f matheusbassini-deploy-403-fix/public_html/api/.env.example
rm -f matheusbassini-deploy-403-fix/public_html/api/.env.hostinger
rm -rf matheusbassini-deploy-403-fix/public_html/api/node_modules
rm -rf matheusbassini-deploy-403-fix/public_html/api/logs

echo "   ‚úÖ Backend preparado"

# Criar arquivo de teste simples
echo "üß™ Criando arquivo de teste..."
cat > matheusbassini-deploy-403-fix/public_html/test.html << 'EOF'
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teste - matheusbassini.com.br</title>
    <style>
        body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
        h1 { color: #007bff; }
        .success { color: green; font-weight: bold; }
    </style>
</head>
<body>
    <h1>üé¨ ViralCut Pro - Teste</h1>
    <p class="success">‚úÖ Site funcionando corretamente!</p>
    <p><strong>Dom√≠nio:</strong> matheusbassini.com.br</p>
    <p><strong>Desenvolvedor:</strong> Matheus Bassini</p>
    <p><strong>Email:</strong> suporte@matheusbassini.com.br</p>
    <hr>
    <p>Se voc√™ v√™ esta p√°gina, o erro 403 foi corrigido!</p>
    <p><a href="/">‚Üê Voltar para o ViralCut Pro</a></p>
</body>
</html>
EOF

# Criar instru√ß√µes de instala√ß√£o espec√≠ficas para erro 403
cat > matheusbassini-deploy-403-fix/INSTRUCOES_403.md << 'EOF'
# üîß Instru√ß√µes para Corrigir Erro 403

## üìÅ 1. Upload dos Arquivos
1. Acesse o Painel Hostinger
2. V√° em "Gerenciador de Arquivos"
3. Navegue at√© a pasta do dom√≠nio matheusbassini.com.br
4. **IMPORTANTE**: Fa√ßa upload de TODO o conte√∫do da pasta `public_html/` para a raiz do dom√≠nio

## ‚úÖ 2. Verificar Arquivos Essenciais
Certifique-se que estes arquivos est√£o na raiz:
- ‚úÖ index.html (OBRIGAT√ìRIO)
- ‚úÖ .htaccess
- ‚úÖ test.html (para teste)
- ‚úÖ pasta assets/ (com CSS e JS)
- ‚úÖ pasta api/ (backend)

## üîß 3. Corrigir Permiss√µes
1. Clique direito em "index.html" ‚Üí Permiss√µes ‚Üí 644
2. Clique direito na pasta raiz ‚Üí Permiss√µes ‚Üí 755
3. Clique direito em ".htaccess" ‚Üí Permiss√µes ‚Üí 644

## üß™ 4. Testar
1. Acesse: https://matheusbassini.com.br/test.html
2. Se funcionar, acesse: https://matheusbassini.com.br
3. Se ainda der erro 403, contate: suporte@matheusbassini.com.br

## üÜò 5. Se Ainda N√£o Funcionar
- Verifique se o SSL est√° ativo
- Verifique se o dom√≠nio est√° apontando corretamente
- Contate o suporte da Hostinger
- Entre em contato: suporte@matheusbassini.com.br
EOF

# Criar script de instala√ß√£o no servidor
cat > matheusbassini-deploy-403-fix/install-no-servidor.sh << 'EOF'
#!/bin/bash
echo "üîß Instalando ViralCut Pro no servidor..."

# Ir para o diret√≥rio da API
cd public_html/api

# Instalar depend√™ncias
echo "üì¶ Instalando depend√™ncias Node.js..."
npm install --production --silent

# Criar diret√≥rio de logs
mkdir -p logs

# Definir permiss√µes corretas
chmod 755 server.js
chmod 600 .env
chmod 755 ../index.html
chmod 644 ../.htaccess

echo "‚úÖ Instala√ß√£o conclu√≠da!"
echo "üåê Teste: https://matheusbassini.com.br/test.html"
echo "üé¨ Site: https://matheusbassini.com.br"
EOF

chmod +x matheusbassini-deploy-403-fix/install-no-servidor.sh

# Verifica√ß√µes finais
echo ""
echo "üîç Verifica√ß√µes finais..."
echo "========================"

# Verificar arquivos essenciais
files_ok=true

if [ ! -f "matheusbassini-deploy-403-fix/public_html/index.html" ]; then
    echo "‚ùå ERRO: index.html n√£o encontrado!"
    files_ok=false
else
    echo "‚úÖ index.html: OK"
fi

if [ ! -f "matheusbassini-deploy-403-fix/public_html/.htaccess" ]; then
    echo "‚ùå ERRO: .htaccess n√£o encontrado!"
    files_ok=false
else
    echo "‚úÖ .htaccess: OK"
fi

if [ ! -f "matheusbassini-deploy-403-fix/public_html/test.html" ]; then
    echo "‚ùå ERRO: test.html n√£o encontrado!"
    files_ok=false
else
    echo "‚úÖ test.html: OK"
fi

if [ ! -d "matheusbassini-deploy-403-fix/public_html/assets" ]; then
    echo "‚ö†Ô∏è  AVISO: pasta assets n√£o encontrada"
else
    echo "‚úÖ assets/: OK"
fi

if [ ! -f "matheusbassini-deploy-403-fix/public_html/api/server.js" ]; then
    echo "‚ùå ERRO: server.js n√£o encontrado!"
    files_ok=false
else
    echo "‚úÖ server.js: OK"
fi

# Estat√≠sticas
echo ""
echo "üìä Estat√≠sticas do Deploy:"
echo "=========================="
frontend_files=$(find matheusbassini-deploy-403-fix/public_html -maxdepth 1 -name "*.html" -o -name "*.js" -o -name "*.css" | wc -l)
backend_files=$(find matheusbassini-deploy-403-fix/public_html/api -name "*.js" | wc -l)
total_size=$(du -sh matheusbassini-deploy-403-fix | cut -f1)

echo "üìÅ Arquivos Frontend: $frontend_files"
echo "üìÅ Arquivos Backend: $backend_files"
echo "üíæ Tamanho Total: $total_size"

if [ "$files_ok" = true ]; then
    echo ""
    echo "‚úÖ DEPLOY CORRIGIDO COM SUCESSO!"
    echo "================================"
    echo "üìÅ Arquivos prontos em: matheusbassini-deploy-403-fix/"
    echo "üåê Dom√≠nio: https://matheusbassini.com.br"
    echo "üß™ Teste: https://matheusbassini.com.br/test.html"
    echo ""
    echo "üìã Pr√≥ximos passos:"
    echo "1. Fa√ßa upload da pasta 'public_html/' para o dom√≠nio"
    echo "2. Configure permiss√µes: 644 para arquivos, 755 para pastas"
    echo "3. Configure Node.js no painel Hostinger"
    echo "4. Ative SSL no dom√≠nio"
    echo "5. Teste: https://matheusbassini.com.br/test.html"
    echo ""
    echo "üéâ Isso deve corrigir o erro 403 Forbidden!"
else
    echo ""
    echo "‚ùå ERRO NO DEPLOY!"
    echo "=================="
    echo "Alguns arquivos essenciais n√£o foram gerados."
    echo "Verifique os erros acima e tente novamente."
    echo ""
    echo "üìû Suporte: suporte@matheusbassini.com.br"
fi
