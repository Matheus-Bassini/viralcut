version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: viralcut-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: viralcut_admin_2024
      MONGO_INITDB_DATABASE: viralcut-pro
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - viralcut-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: viralcut-redis
    restart: unless-stopped
    command: redis-server --requirepass viralcut_redis_2024
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - viralcut-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: viralcut-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:viralcut_admin_2024@mongodb:27017/viralcut-pro?authSource=admin
      REDIS_URL: redis://:viralcut_redis_2024@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-refresh-token-secret-change-in-production
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - viralcut-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: viralcut-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000/api
      VITE_APP_NAME: ViralCut Pro
      VITE_APP_VERSION: 1.0.0
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - viralcut-network
    command: npm run dev

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: viralcut-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - viralcut-network
    profiles:
      - production

  # FFmpeg Video Processing Service
  video-processor:
    build:
      context: ./docker/video-processor
      dockerfile: Dockerfile
    container_name: viralcut-video-processor
    restart: unless-stopped
    environment:
      REDIS_URL: redis://:viralcut_redis_2024@redis:6379
      MONGODB_URI: mongodb://admin:viralcut_admin_2024@mongodb:27017/viralcut-pro?authSource=admin
    volumes:
      - uploads_data:/app/uploads
      - processed_data:/app/processed
    depends_on:
      - mongodb
      - redis
    networks:
      - viralcut-network
    profiles:
      - production

  # MinIO Object Storage (S3 compatible)
  minio:
    image: minio/minio:latest
    container_name: viralcut-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: viralcut_minio_admin
      MINIO_ROOT_PASSWORD: viralcut_minio_password_2024
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - viralcut-network
    command: server /data --console-address ":9001"
    profiles:
      - production

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: viralcut-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - viralcut-network
    profiles:
      - monitoring

  # Grafana for Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: viralcut-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: viralcut_grafana_2024
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - viralcut-network
    profiles:
      - monitoring

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  processed_data:
    driver: local
  logs_data:
    driver: local
  minio_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  viralcut-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
